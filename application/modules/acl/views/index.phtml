<article>
<form action="" method="post">
    <table class="table">
        <caption>Assign permissions to groups</caption>
        <thead>
            <tr>
                <th>Permission</th>
                <? foreach ($groups as $group) : ?>
                <th class="s checkcol checkall">
                    <?=$group->name?>
                    <div class="checkbox" data-type="col"><div></div></div>
                </th>
                <? endforeach; ?>
            </tr>
        </thead>
        <tbody>
            <? foreach ($acl as $rule): ?>
                <tr class="checkrow">
                <th class="checkall">
                    <div class="checkbox" data-type="row"><div></div></div>
                    <?=$rule?>
                </th>
                <? foreach ($groups as $group) : ?>
                <td class="textcenter"><input type="checkbox" name="rule[<?=$rule?>][<?=$group->id?>]" /></td>
                <? endforeach; ?>
                </tr>
            <? endforeach; ?>
        </tbody>
    </table>
    <input type="submit" class="btn btn-primary" value="Save"/>
</form>
<? foreach ($reflection as $module => $controllers) : ?>
    <h2>Module: <?=$module?></h2>
    <? foreach ($controllers as $controller => $data) : ?>
    <p>
        Controller: <?=$controller?>;
        <? if (isset($data['acl'])) : ?>
        Acl: <?=$data['acl']?>
        <? endif; ?>
        <? // \Bluz\Debug::dump($data)?>
    </p>
    <? endforeach; ?>
<? endforeach; ?>
<script>
    $(function(){


        $(".checkall .checkbox").click(function(){
            var checkbox = $(this);
            var type = checkbox.data('type');
            var active = checkbox.hasClass('active');

            checkbox.toggleClass('active');
            checkbox.removeClass('someactive');

            switch (type) {
                case 'row':
                    checkbox.closest("tr").find(':checkbox').prop('checked', !active);
                    break;
                case 'col':
                    var i = checkbox.parent().index()+1;
                    checkbox.closest("table").find("tr td:nth-child("+i+")").find(':checkbox').prop('checked', !active);
                    break;
            }
            return false;
        });

        function checkRow($row) {
            var $checkbox = $row.find('.checkall .checkbox');
            if ($row.find(':checked').length == 0) {
                $checkbox.removeClass('active');
                $checkbox.removeClass('someactive');
            } else if ($row.find(':checked').length == $row.find(':checkbox').length) {
                $checkbox.addClass('active');
                $checkbox.removeClass('someactive');
            } else {
                $checkbox.addClass('someactive');
            }
        }
        function checkCol($checkbox) {
            var i = $checkbox.parent().index()+1;
            var checkboxes = $checkbox.closest("table").find("tr td:nth-child("+i+") :checkbox");

            if (checkboxes.filter(':checked').length == 0) {
                $checkbox.removeClass('active');
                $checkbox.removeClass('someactive');
            } else if (checkboxes.filter(':checked').length == checkboxes.length) {
                $checkbox.addClass('active');
                $checkbox.removeClass('someactive');
            } else {
                $checkbox.addClass('someactive');
            }
        }

        $('.checkrow').each(function(){ checkRow($(this)) });
        $('.checkcol').each(function(){ checkCol($(this).find('.checkbox')) });

        $('.checkrow :checkbox').click(function(){
            checkRow($(this).closest('.checkrow'));
            var i = $(this).parent().index()+1;
            console.log(i);
            checkCol($(this).closest("table").find("tr:first th:nth-child("+i+") .checkbox"));
        });

    });
</script>
</article>